{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-07-07T22:12:04.156-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-08T22:50:48.280765-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "AKFldqOfDQCBBIFeAWyuHw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A pragma represents the occurrence of an annotation in a compiled method. A pragma \nis a literal message pattern that occurs between angle brackets at the start of a \nmethodafter any temporaries\n\nBecause pragmas are messages, one can browse senders and implementors and perform \nthem. One can query a method for its pragmas by sending it the pragmas message, which \nanswers an Array of pragma instances, one for each pragma in the method. \n\nA pragma holds information about its defining class, method, its selector, \nas well as theinformation about the pragma keyword and its arguments.\n\nDeclaring a pragma : <> in method\nAccessing method annotation: pragma := (Color >> #gtInspectorColorIn:) pragmas first\n    => pragma arguments\n    => pragma keyword\n    => pragma selector\n    => pragma method\n    => pragma methodClass\nQuerying pragmas: Pragma allNamed: #alarm: in: Pragma\nor: Pragma allNamed: #gtExample in: BlBasicExamples\n\nget a pragma: (BlBasicExamples >> #buttons) pragmas first\n\nExecuting a pragma: (AClass >> #test) pragmas first sendTo: Alarmer new\n\na tool may need to adapt its internal state whenever a method contain-ing a particular pragma is added, \nremoved or updated. This is the role of thePragmaCollector:\n    PragmaCollectorfilter: [:pragma | pragma keyword = ’primitive:’]) reset\n    \n    \nPragma `<return: AClassName>`\nHow is it used ?"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-07-07T22:11:52.053-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-07-07T22:12:01.506-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Pragmas"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "08f96476-a39f-0d00-8103-84a1016cae1f"
	}
}