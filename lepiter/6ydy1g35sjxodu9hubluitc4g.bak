{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-09T12:22:08.707-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-09T12:22:16.342-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "uPVMccL6DQCLNgynDFV7dQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Like Bag except duplicates not allowed IdentitySet: uses identity test (== rather than =)\r\n\r\n```st\r\n| b x y sum max |\r\nx := Set with: 4 with: 3 with: 2 with: 1.                   \"create collection with up to 4 elements\"\r\nx := Set new.                                               \"allocate collection\"\r\nx add: 4; add: 3; add: 1; add: 2; yourself.                 \"add element to collection\"\r\ny := x addAll: #(7 8 9).                                    \"add multiple elements to collection\"\r\ny := x removeAll: #(7 8 9).                                 \"remove multiple elements from collection\"\r\ny := x remove: 4 ifAbsent: [].                              \"remove element from collection\"\r\nb := x isEmpty.                                             \"test if empty\"\r\ny := x size.                                                \"number of elements\"\r\nx includes: 4.                                              \"test if element is in collection\"\r\nx do: [:a | Transcript show: a printString; cr].            \"iterate over the collection\"\r\ny := x select: [:a | a > 2].                                \"return collection of elements that pass test\"\r\ny := x reject: [:a | a < 2].                                \"return collection of elements that fail test\"\r\ny := x collect: [:a | a + a].                               \"transform each element for new collection\"\r\ny := x detect: [:a | a > 3] ifNone: [].                     \"return first element that passes test\"\r\nsum := 0. x do: [:a | sum := sum + a]. sum.                 \"sum elements\"\r\nsum := x inject: 0 into: [:a :c | a + c].                   \"sum elements\"\r\nmax := x inject: 0 into: [:a :c | (a > c)                   \"find max element in collection\"\r\n   ifTrue: [a]\r\n   ifFalse: [c]].\r\ny := x asArray.                                             \"convert to array\"\r\ny := x asOrderedCollection.                                 \"convert to ordered collection\"\r\ny := x asSortedCollection.                                  \"convert to sorted collection\"\r\ny := x asBag.                                               \"convert to bag collection\"\r\ny := x asSet.                                               \"convert to set collection\"\r\n```"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-09-09T12:22:08.676-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-09-09T12:22:08.676-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Pharo set"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "a07c4c71-c2fa-0d00-8b35-2b590c557b75"
	}
}