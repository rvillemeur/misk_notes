{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-07-22T19:36:00.994-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-07-22T19:36:00.994-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sOUqCM+gDQC9Ms27DxVTDQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "$ cat > /tmp/lines.txt\r\none\r\ntwo\r\nthree\r\n\r\n(FileLocator temp / 'lines.txt') contents lines.\r\n\r\n'/tmp/lines.txt' asFileReference contents lines.\r\n\r\n'/tmp/lines.txt' asFileReference readStreamDo: [ :in |\r\n  Array streamContents: [ :out |\r\n    [ in atEnd ] whileFalse: [ out nextPut: in nextLine ] ] ].\r\n\r\n(File named: '/tmp/lines.txt') readStreamDo: [ :in |\r\n  | characterStream |\r\n  characterStream := ZnCharacterReadStream on: in.\r\n  Array streamContents: [ :out |\r\n    [ characterStream atEnd ] whileFalse: [ out nextPut: characterStream nextLine ] ] ].\r\n\r\nThey all return #('one' 'two' 'three').\r\n\r\n\r\n  (File named: '/tmp/lines.txt') readStream[Do:]\r\n  \r\n  \r\n  | |\r\n (File named: '/tmp/lines.txt') readStream[Do:]\r\n  \r\n  \r\n  #printToFileNamed:beforeWritingDo: \r\n  \r\n   f := File openForWriteFileNamed: '/home/jimmie/xmldoc.xml'.\r\n> >> f nextPutAll: (writer write contents).\r\n> >> f flush.\r\n> >> f close.\r\n\r\noutStream nextPutAll:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-07-22T19:41:46.107-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-07-22T19:41:46.107-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8CgkHc+gDQC9TpYpDxVTDQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "http://forum.world.st/Stream-instead-of-string-concatenation-td4792368.html"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-07-22T19:35:52.908-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-07-22T19:35:59.693-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "file stream"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "e0602a08-cfa0-0d00-bd31-548c0f15530d"
	}
}