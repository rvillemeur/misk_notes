Roassal:

Element
 - has a shape (how it is rendered)
 - react to event (drag & drop, click, etc...)

Elements can added to a view, and/or nested in other elements.
The view is like a camera, that can be translated, rotated, etc...

Shape of an element can be tweaked, and composed with different shapes.

One can link different elements together with:
 - arrow
 - edge
 - edge with arrow
 - double arrow
 - etc...
 
Layout define how elements are automatically arranged in a view.
 - grid layout
 - row layout (horizontal or vertical)
 - circle layout
 - tree layout
 - treeMap layout
 - etc...

================================================================================
Comme toute stack graphique, l'axe roassal part du point en haut à gauche de 
l'écran, et part en bas à droite (sens de l'écriture occidentale).

par défaut, une fenêtre roassal fait une taille de 500@500.
Pour adapter le dessin à la taille de la fenêtre:
canvas @ RSCanvasController.

pour faire un axe de courbe:
	axes := RSPolyline new width: 2;
		controlPoints: { 0@0. 0@90. 0@45 . 90@45  }.
	
Pour faire un axe de graphe:
	axes := RSPolyline new width: 2;
		controlPoints: { 0@0. 0@90. 90@90  }.
		
Pour ajouter une dessin à la fin des axes:
	arrow := RSPolygon new 
		points: { -10@0. 0@ -10. 10@0 };
		color: Color black;
		size: 10.
	axes markerEnd: (axes markerStart: arrow).

ou
	circle := RSEllipse new
    radius: 2.5;
    color: Color red.
	axes markerEnd: (axes markerStart: circle).

	
	| canvas arrow axes box interest |
canvas := RSCanvas new.

"dataLine marker: circle."

axes := RSPolyline new controlPoints: { 0@0. 0@150. 150@150 }.

interest := RSPolyline new color: Color red;
    controlPoints: { 15@80. 29@50. 43@60. 57@30. 71@40. 85@15 }.


(30 to: 150 by: 10) do: [ :nb |
	box := RSBox new size: nb@nb.
	canvas add: box ].
RSFlowLayout on: canvas nodes.
canvas addShape: interest.

canvas addShape: axes.
canvas @ RSCanvasController.
canvas open

