'From Pharo8.0.0 of 22 January 2020 [Build information: Pharo-8.0.0+build.1124.sha.0932da82f08175e906b0e2a8052120c823374e9f (64 Bit)] on 3 April 2020 at 3:58:24.050845 pm'!Morph subclass: #AthensHello	slots: { #surface }	classVariables: {  }	package: 'RDV-Athens-Hello'!!AthensHello methodsFor: 'rendering' stamp: 'StephaneDucasse 4/3/2020 15:32'!renderAthens|font|font := LogicalFont familyName: 'Arial' pointSize: 10.	surface drawDuring: [:canvas | 		"canvas pathTransform loadIdentity."		surface clear. 		canvas setPaint: ((LinearGradientPaint from: 0@0  to: self extent) colorRamp: {  0 -> Color white. 1 -> Color black }).		canvas drawShape: (0@0 extent: self extent). 		canvas setFont: font. 		canvas setPaint: Color pink.		canvas pathTransform translateX: 20 Y: 20 + (font getPreciseAscent); scaleBy: 2; rotateByDegrees: 25.		canvas drawString: 'Hello Athens in Pharo/Morphic'			].! !!AthensHello methodsFor: 'rendering' stamp: 'StephaneDucasse 4/3/2020 15:48'!renderMorph: aCanvas|fill rectangle s font|	rectangle := Rectangle origin: self leftCenter  corner: self bottomRight.		fill := GradientFillStyle ramp: {0.0 -> Color white. 1.0 -> Color black}.	fill origin: self leftCenter.	fill direction: self bottomRight..	fill normal: self rightCenter .	fill radial: true.		s := 'hello world from Morphic'.	font := LogicalFont familyName: 'Arial' pointSize: 10.	aCanvas fillRectangle: rectangle basicFillStyle: fill.	aCanvas drawString: 'hello world from Morphic' from: 1 to: s size at: self leftCenter + 10 font: font color: Color red! !!AthensHello methodsFor: 'examples' stamp: 'StephaneDucasse 4/2/2020 14:23'!open	<script: 'AthensHello new openInWindow'>	! !!AthensHello methodsFor: 'defaults' stamp: 'StephaneDucasse 4/2/2020 14:25'!defaultExtent	^ 400@400! !!AthensHello methodsFor: 'drawing' stamp: 'StephaneDucasse 4/3/2020 14:50'!drawOn: aCanvas	self renderAthens.	surface displayOnMorphicCanvas: aCanvas at: bounds origin.	self renderMorph: aCanvas! !!AthensHello methodsFor: 'initialization' stamp: 'StephaneDucasse 4/3/2020 14:33'!initialize	super initialize.	self extent: self defaultExtent.	surface := AthensCairoSurface extent: self bottomRight! !!AthensHello methodsFor: 'geometry' stamp: 'StephaneDucasse 4/3/2020 14:46'!extent: aPoint	| newExtent |	newExtent := aPoint rounded.	(bounds extent closeTo: newExtent)		ifTrue: [ ^ self ].	self changed.	bounds := bounds topLeft extent: newExtent.	surface := AthensCairoSurface extent: newExtent.	self layoutChanged.	self changed! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AthensHello class	slots: {  }!!AthensHello class methodsFor: 'instance creation' stamp: 'StephaneDucasse 4/2/2020 14:13'!open	<example>	self new openInWindow! !